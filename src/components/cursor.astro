---

---

<div class="custom-cursor" id="customCursor"></div>

<style>
   body {
      cursor: none;
   }

   .custom-cursor {
      position: fixed;
      width: 20px;
      height: 20px;
      background: white;
      border-radius: 50%;
      pointer-events: none;
      z-index: 10000;
      transform: translate(-50%, -50%);
      opacity: 0;
      transition:
         width 0.15s ease,
         height 0.15s ease,
         background 0.15s ease;
      will-change: transform;
   }

   .custom-cursor.visible {
      opacity: 1;
   }

   .custom-cursor.hover {
      width: 40px;
      height: 40px;
      background: rgba(255, 255, 255, 0.5);
      border: 2px solid white;
   }
</style>

<script>
   document.addEventListener("DOMContentLoaded", function () {
      const cursor = document.getElementById("customCursor");

      if (!cursor) return;

      let isVisible = false;

      function updateCursorPosition(e: MouseEvent) {
         if (!cursor) return;
         cursor.style.transform = `translate3d(${e.clientX - 10}px, ${e.clientY - 10}px, 0)`;

         if (!isVisible) {
            cursor.style.opacity = "1";
            isVisible = true;
         }
      }

      document.addEventListener("mousemove", updateCursorPosition, { passive: true });

      function isHoverElement(element: EventTarget | Element | null): boolean {
         if (!element || !("tagName" in element)) return false;

         const htmlElement = element as Element;
         const tagName = htmlElement.tagName?.toLowerCase();

         if (tagName === "a" || tagName === "button" || tagName === "input" || tagName === "textarea" || tagName === "select") {
            return true;
         }

         if (htmlElement.hasAttribute && htmlElement.hasAttribute("role") && htmlElement.getAttribute("role") === "button") {
            return true;
         }

         if (htmlElement.classList && (htmlElement.classList.contains("cursor-pointer") || htmlElement.classList.contains("group") || (htmlElement as HTMLElement).style?.cursor === "pointer")) {
            return true;
         }

         const parent = htmlElement.closest && htmlElement.closest('a, button, [role="button"], .cursor-pointer, .group');
         return !!parent;
      }

      document.addEventListener(
         "mouseover",
         function (e) {
            const target = e.target;
            if (!target || !cursor) return;

            if (isHoverElement(target)) {
               cursor.classList.add("hover");
            }
         },
         { passive: true }
      );

      document.addEventListener(
         "mouseout",
         function (e) {
            const target = e.target;
            if (!target || !cursor) return;

            if (isHoverElement(target)) {
               cursor.classList.remove("hover");
            }
         },
         { passive: true }
      );

      document.addEventListener(
         "mouseleave",
         function () {
            if (!cursor) return;
            cursor.style.opacity = "0";
            isVisible = false;
         },
         { passive: true }
      );

      document.addEventListener(
         "mouseenter",
         function () {
            if (!cursor) return;
            cursor.style.opacity = "1";
            isVisible = true;
         },
         { passive: true }
      );
   });
</script>
