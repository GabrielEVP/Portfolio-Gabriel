---
const navItems = [
  { name: "Sobre mí", href: "#about" },
  { name: "Experiencia", href: "#experience" },
  { name: "Educación", href: "#education" },
  { name: "Proyecto", href: "#projects" },
  { name: "Contacto", href: "#contact" },
];
---

<script>
  let scrolled = false;

  const handleScroll = () => {
    scrolled = window.scrollY > 10;
    const nav = document.getElementById("navbar");
    if (!nav) return;
    if (scrolled) {
      nav.classList.add("shadow-md", "bg-black/95", "backdrop-blur");
    } else {
      nav.classList.remove("shadow-md", "bg-black/95", "backdrop-blur");
    }
  };

  if (typeof window !== "undefined") {
    window.addEventListener("scroll", handleScroll);
  }
</script>

<nav
  id="navbar"
  class="bg-neutral-50 fixed top-0 w-full z-50 transition-all duration-300"
>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex h-16 items-center justify-between">
      <div class="flex-shrink-0">
        <div class="w-10 h-10">
          <img src="/Logo.png" alt="logo" class="w-10 h-10" />
        </div>
      </div>
      <div class="hidden md:flex items-center space-x-8">
        {
          navItems.map((item) => (
            <a
              href={item.href}
              class="text-gray-800 hover:text-black font-medium transition-colors duration-200 px-2 py-1 rounded-md relative group tracking-wide"
            >
              {item.name}
              <span class="absolute -bottom-1 left-0 w-0 h-0.5 bg-black transition-all duration-300 group-hover:w-full" />
            </a>
          ))
        }
      </div>
      <div class="md:hidden">
        <button
          type="button"
          id="mobile-menu-btn"
          class="text-gray-800 hover:text-black focus:outline-none focus:text-black"
          aria-controls="mobile-menu"
          aria-expanded="false"
        >
          <svg
            class="h-6 w-6"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>
    </div>
  </div>
  <div
    class="md:hidden fixed top-0 left-0 w-full h-screen bg-white/80 backdrop-blur-sm z-40 transition-all duration-300 opacity-0 pointer-events-none"
    id="mobile-menu"
  >
    <button
      id="close-mobile-menu"
      aria-label="Cerrar menú"
      class="absolute top-6 right-6 text-gray-700 hover:text-black text-4xl p-2 focus:outline-none"
      >&times;</button
    >
    <div
      class="flex flex-col items-center justify-center h-full gap-8 animate-fade-slide"
    >
      {
        navItems.map((item) => (
          <a
            href={item.href}
            class="text-gray-900 text-2xl font-semibold px-6 py-3 rounded-md transition-all duration-200 hover:bg-gray-100 hover:scale-105"
          >
            {item.name}
          </a>
        ))
      }
    </div>
  </div>
</nav>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const mobileMenuBtn = document.getElementById("mobile-menu-btn");
    const mobileMenu = document.getElementById("mobile-menu");
    const closeMobileMenuBtn = document.getElementById("close-mobile-menu");

    if (mobileMenuBtn && mobileMenu) {
      mobileMenuBtn.addEventListener("click", () => {
        const isOpen = mobileMenu.classList.contains("opacity-100");
        if (!isOpen) {
          mobileMenu.classList.add("opacity-100");
          mobileMenu.classList.remove("opacity-0", "pointer-events-none");
          mobileMenuBtn.setAttribute("aria-expanded", "true");
          document.body.style.overflow = "hidden";
        } else {
          mobileMenu.classList.remove("opacity-100");
          mobileMenu.classList.add("opacity-0", "pointer-events-none");
          mobileMenuBtn.setAttribute("aria-expanded", "false");
          document.body.style.overflow = "";
        }
      });
    }
    if (closeMobileMenuBtn && mobileMenu) {
      closeMobileMenuBtn.addEventListener("click", () => {
        mobileMenu.classList.remove("opacity-100");
        mobileMenu.classList.add("opacity-0", "pointer-events-none");
        if (mobileMenuBtn) mobileMenuBtn.setAttribute("aria-expanded", "false");
        document.body.style.overflow = "";
      });
    }
    if (mobileMenu) {
      const mobileLinks = mobileMenu.querySelectorAll("a");
      mobileLinks?.forEach((link) => {
        link.addEventListener("click", () => {
          mobileMenu.classList.remove("opacity-100");
          mobileMenu.classList.add("opacity-0", "pointer-events-none");
          if (mobileMenuBtn)
            mobileMenuBtn.setAttribute("aria-expanded", "false");
          document.body.style.overflow = "";
        });
      });
    }
  });
</script>

<style>
  @keyframes fade-slide {
    from {
      opacity: 0;
      transform: translateY(-30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  .animate-fade-slide {
    animation: fade-slide 0.7s cubic-bezier(0.4, 0, 0.2, 1);
  }
</style>
